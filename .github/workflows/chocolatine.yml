name: Chocolatine Workflow

on:
  push:
    branches-ignore:
      - 'ga-ignore-*'
    paths-ignore:
      - 'chocolatine.yml'
  pull_request:
    branches-ignore:
      - 'ga-ignore-*'
    paths-ignore:
      - 'chocolatine.yml'

env:
  MIRROR_URL: "URL_DU_REP_Epitech_miroir"
  EXECUTABLES: "day06"

jobs:
  check_coding_style:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Check coding style
        run: check.sh $(pwd) $(pwd)
      # You may need to adjust the following based on the actual output format of your checker
      - name: Display coding style errors
        if: ${{ failure() }}
        run: cat coding-style-reports.log
      - name: Fail if there are coding style errors
        if: ${{ failure() }}
        run: exit 1

  check_program_compilation:
    runs-on: ubuntu-latest
    container: epitechcontent/epitest-docker
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Compile code
        run: make
        timeout-minutes: 2
      - name: Clean up
        run: make clean
      - name: Verify executables
        run: |
          for executable in $(echo $EXECUTABLES | tr "," "\n"); do
            if [ ! -x "$executable" ]; then
              echo "Executable $executable is missing or not executable"
              exit 1
            fi
          done

  run_tests:
    runs-on: ubuntu-latest
    container: epitechcontent/epitest-docker
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Run tests
        run: make tests_run
        timeout-minutes: 2

  push_to_mirror:
    runs-on: ubuntu-latest
    needs: [check_coding_style, check_program_compilation, run_tests]
    if: github.event_name == 'push' && github.repository != secrets.MIRROR_URL
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Push to mirror repository
        uses: pixta-dev/repository-mirroring-action@v1
        with:
          destination_repo: ${{ secrets.MIRROR_URL }}
          ssh_private_key: ${{ secrets.GIT_SSH_PRIVATE_KEY }}
